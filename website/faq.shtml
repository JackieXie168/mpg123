<!--#include file="header.html" -->
	<title>mpg123: Frequently Asked Questions</title>
</head>
<body>
	<!--#include file="linkbar.html" -->
	<h1><a name="alsacpu">Frequently Asked Questions</a></h1>

	<p>As a special treat, this FAQ is also available as <a href="http://ucallweconn.net/be/mpg123-faq-be">Belorussian 
translation</a> by Martha Ruszkowski.</p>

	<h2>mpg123 does only play the intro jingle of my web radio!</h2>
	<p>
		This might be collateral damage from a feature of mpg123 -- the gapless playback using sample-exact length and padding information provided at the beginning of an MP3 stream. It makes perfect sense for files, and actually should only be present there.
		Now, some web radios just insert such a single file with that special gapless header into the radio stream and make mpg123 believe it is just playing a single small file where it should cut off some trailing silence -- that trailing silence effectively including the actual radio stream!
	</p>
	<p>
		Use of the --no-gapless command line switch might help, or the unsetting of the MPG123_GAPLESS flag when using libmpg123. Further information and discussion about possible changes of mpg123's smarts about this are to be found in mailing list archives,
		one <a href="http://sourceforge.net/mailarchive/forum.php?thread_name=AANLkTi%3DsPFmeVzzxx2YM9cLC34VBtXF6-YPGPpFd_6HP%40mail.gmail.com&amp;forum_name=mpg123-devel">thread on the devel list</a>,
		one <a href="http://sourceforge.net/mailarchive/forum.php?thread_name=20110112114017.57cd4507%40dunkelstern&amp;forum_name=mpg123-users">thread on the users list</a>.
	</p>
	<h2>I am trying to use libmpg123 and I am confused by the output format stuff.</h2>
	<p>Read the updated overall <a href="/api/group__mpg123__output.shtml">description of the format API</a>. If that does not help, please ask for clarification.</p>

	<h2>I want to port some old code using mpglib to libmpg123.</h2>
	<p>For that case, the feeder API has been introduced in addition to the file-based API. Have a look at the examples, specifically <a href="/api/mpglib_8c.shtml">the mpglib-like example</a>. Make also sure to read the API documentation about the feeder API ... and the stuff about output formats.

	<h2>Hey, mpg123 uses way too much CPU time on Linux!</h2>
	<p>
		You just installed the fast and lean UNIX command line MPEG audio player and gaze agape at the high CPU load you see while playing a track.
		You even have a standard GNU/Linux setup with ALSA sound, no fancy audio daemons roaming around... is mpg123 such a CPU hog?
	</p>
	<h3>Solution</h3>
	<p>
		Check the CPU load of
	</p>
<pre>
mpg123 -a hw:0,0 myfile.mp3
</pre>
	<p>
		That uses the ALSA hardware (sort of) directly without the software layer in between, that can and will do up/downmixing, format conversion and resampling.
		If that has lower CPU usage, then it may well be that ALSA decided to open your audio hardware at 48kHz and resamples your 44.1kHz file for playback on the fly.
		The default resampling seems to be of the rather expensive type, easily beating the whole MPEG decoding business.
		You  can configure the  default audio device to behave differently, choose the sample rate, lower quality resampling, etc.
		Please refer to ALSA documentation how to do that, or just use the hardware directly as indicated above, if that works for your setup (sharing the device with other apps, etc).
	</p>
	<p>It may be an additional bug that on my (Thomas) machine, the CPU load with the ALSA default device increases after some time to a ridiculous number of around 30% (on a Core2Duo, clocked between 800 and 1200MHz).</p>

	<h2><a name="lame">I want to use LAME in a non-GPL way and need permission for using the included mpglib</a></h2>
	<p>
		That request is coming quite often. The issue is that current mpg123 and libmpg123 is LGPL and <em>I</em> as maintainer am fine with usage of code from mpg123 under these terms, while the mpglib in LAME is older and still under GPL.
		There may be changes to the mpglib made by people who don't want their work used under LGPL instead of GPL.
		I don't know how relevant this issue is, but it is a concern by the LAME developers.
	</p>
	<p>
		Please read <a href="http://sourceforge.net/mailarchive/forum.php?thread_name=20080724085050.30463yz0cyn01740%40webmail.leidinger.net&forum_name=lame-dev">some mails to the lame-dev list</a> for elaboration.
	</p>

	<h3>Solution</h3>
	<p>
		The solution to the whole mess would be to find a bit of manpower to change LAME to use libmpg123.
		It should be not that hard, especially since the mpg123 (svn trunk, at least) supports floating point output as runtime option.
		There may be more requirements by LAME that need some tweaks in libmpg123, but assessing that need is part of the manpower thing.
		LAME and mpg123 development teams are small and not paid for that work (AFAIK that's the case for both). Your help is appreciated.
	</p>

	<h2><a name="lfs"></a>Mismatch in large file setup!</h2>
	<p>You try to compile a program using libmpg123 on GNU/Linux or Solaris and get this:</p>
	<pre>
/usr/local/include/mpg123.h:37:2: error: #error &quot;Mismatch in large file setup! 
               Enable/disable large file support appropriately to use libmpg123.&quot;
	</pre>
	<p>
		This is due to libmpg123 being compiled with large file support and your app is trying to compile without... or the other way round.
		Usually, it is the case that you upgraded to mpg123 1.6, which enabled large file support as default and your app build fails to use the switch for enabling large support.
	</p>
	<h3>Solution</h3>
	<p>The usual case is resolved by this:</p>
	<ol>
		<li>Make sure you use off_t properly for all file offsets (mpg123 API, but also other file I/O).</li>
		<li>Add -D_FILE_OFFSET_BITS=64 to your compiler flags -- for the whole build.</li>
	</ol>
	<p>Note that just disabling large file support in libmpg123 may be an option, but not a smart move. Everyone should use large file support nowadays and GNU/Linux distributions use it as default.</p>

	<h2><a name="asterisk">I want my music in asterisk and the mpg123 on my distro is just rubbish!</a></h2>
	<p>
		You are living in the past. See <a href="asterisk.shtml">my message to the asterisk community</a>.
	</p>

	<h2>I want to compile with Alsa but configure fails - what do I need?</h2>
	<p>Most likely, you are missing the header files for the alsa library (libasound) or even the library itself. </p>
	
	<table>
		<tr><th>Distro</th><th>Needed packages</th></tr>
		<tr><td>Debian / Ubuntu</td><td>libasound2, libasound2-dev</td></tr>
	</table>
	<h2>I want a fresh RPM of mpg123!</h2>
	<p>Your distro does not contain a current mpg123 and but you still want to install it properly via rpm...</p>
	<h3>Solution</h3>
	<p>You can simply download the source and use rpmbuild -- see <a href="http://sites.google.com/site/mclroy/mpg123">Michael's HOWTO</a></p>

	<h2>No sound on my AMD64 / x86_64 machine!</h2>
	<p>See bug <a href="http://sourceforge.net/tracker/index.php?func=detail&aid=1547470&group_id=135704&atid=733194">1547470</a>. There is an issue with alsa < 1.0.13 that breaks mpg123 when compiled with 64bits (on this platform only?). So just upgrade alsa and it should be fine.</p>
</body>
</html>

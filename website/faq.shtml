<!--#include file="header.html" -->
	<title>mpg123: Frequently Asked Questions</title>
</head>
<body>
	<!--#include file="linkbar.html" -->
	<h1>Frequently Asked Questions</h1>

	<h2><a name="lame">I want to use LAME in a non-GPL way and need permission for using the included mpglib</a></h2>
	<p>
		That request is coming quite often. The issue is that current mpg123 and libmpg123 is LGPL and <em>I</em> as maintainer am fine with usage of code from mpg123 under these terms, while the mpglib in LAME is older and still under GPL.
		There may be changes to the mpglib made by people who don't want their work used under LGPL instead of GPL.
		I don't know how relevant this issue is, but it is a concern by the LAME developers.
	</p>
	<p>
		Please read <a href="http://sourceforge.net/mailarchive/forum.php?thread_name=20080724085050.30463yz0cyn01740%40webmail.leidinger.net&forum_name=lame-dev">some mails to the lame-dev list</a> for elaboration.
	</p>

	<h3>Solution</h3>
	<p>
		The solution to the whole mess would be to find a bit of manpower to change LAME to use libmpg123.
		It should be not that hard, especially since the mpg123 (svn trunk, at least) supports floating point output as runtime option.
		There may be more requirements by LAME that need some tweaks in libmpg123, but assessing that need is part of the manpower thing.
		LAME and mpg123 development teams are small and not paid for that work (AFAIK that's the case for both). Your help is appreciated.
	</p>

	<h2><a name="lfs"></a>Mismatch in large file setup!</h2>
	<p>You try to compile a program using libmpg123 on GNU/Linux or Solaris and get this:</p>
	<pre>
/usr/local/include/mpg123.h:37:2: error: #error &quot;Mismatch in large file setup! 
               Enable/disable large file support appropriately to use libmpg123.&quot;
	</pre>
	<p>
		This is due to libmpg123 being compile with large file support and your app is trying to compile without... or the other way round.
		Usually, it is the case that you upgraded to mpg123 1.6, which enabled large file support as default and your app build fails to use the switch for enabling large support.
	</p>
	<h3>Solution</h3>
	<p>The usual case is resolved by this:</p>
	<ol>
		<li>Make sure you use off_t properly for all file offsets (mpg123 API, but also other file I/O).</li>
		<li>Add -D_FILE_OFFSET_BITS=64 to your compiler flags -- for the whole build.</li>
	</ol>
	<p>Note that just disabling large file support in libmpg123 may be an option, but not a smart move. Everyone should use large file support nowadays and GNU/Linux distributions use it as default.</p>

	<h2><a name="asterisk">I want my music in asterisk and the mpg123 on my distro is just rubbish!</a></h2>
	<p>
		You are living in the past. See <a href="asterisk.shtml">my message to the asterisk community</a>.
	</p>

	<h2>I want to compile with Alsa but configure fails - what do I need?</h2>
	<p>Most likely, you are missing the header files for the alsa library (libasound) or even the library itself. </p>
	
	<table>
		<tr><th>Distro</th><th>Needed packages</th></tr>
		<tr><td>Debian / Ubuntu</td><td>libasound2, libasound2-dev</td></tr>
	</table>
	<h2>No sound on my AMD64 / x86_64 machine!</h2>
	<p>See bug <a href="http://sourceforge.net/tracker/index.php?func=detail&aid=1547470&group_id=135704&atid=733194">1547470</a>. There is an issue with alsa < 1.0.13 that breaks mpg123 when compiled with 64bits (on this platform only?). So just upgrade alsa and it should be fine.</p>
</body>
</html>
